@using PagedList;
@using PagedList.Mvc;
@model PagedList<KinderFirst.Models.GalleryItem>
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Gallery";
}

<div class="gallery-body">
    @Html.PagedListPager(Model, page => Url.Action("Gallery", "Pictures", new { page }))
    <div class="row">

        @{
            foreach (var item in Model)
            {
                if (item.PicLink == null)
                {
                    item.PicLink = "~/Content/Images/noimage.png";
                }

                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-4 gallery-item">

                    <div class="gallery-img-container box-shadow">
                        <img class="gallery-item-img" src="@Url.Content(item.PicLink)" />
                        <div class="gallery-like-box">
                            @Ajax.ActionLink("Like", "Like", new { itemId = item.Id },
                                new AjaxOptions
                                {
                                    UpdateTargetId = "timeDisplay" + item.Id,
                                    LoadingElementId = "timeDisplayLoading",
                                    HttpMethod = "GET",
                                    InsertionMode = InsertionMode.Replace,
                                    OnBegin = "OnAjaxRequestBegin",
                                    OnFailure = "OnAjaxRequestFailure",
                                    OnSuccess = "OnAjaxRequestSuccess",
                                    OnComplete = "OnAjaxRequestComplete"

                                })
                        </div>
                    </div>
                    <div>
                        <span id="@String.Format("timeDisplay{0}",item.Id)">@item.Likes</span>

                        <span>
                            @Ajax.ActionLink("Delete", "DeleteGalleryItem", new { id = item.Id },
    new AjaxOptions
    {
        UpdateTargetId = "active" + item.Id,
        LoadingElementId = "timeDisplayLoading",
        HttpMethod = "DELETE",
        InsertionMode = InsertionMode.Replace,
        OnBegin = "OnAjaxRequestBegin",
        OnFailure = "OnAjaxRequestFailure",
        OnSuccess = "OnAjaxRequestSuccess",
        OnComplete = "OnAjaxRequestComplete"

    })
                        </span>

                    </div>
                    <div id="timeDisplayLoading" style="display: none"></div>

                </div>
            }
        }
    </div>
    <div class="modal fade" id="myModal" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>                   
                </div>
                <div class="modal-body">
                    <img id="modalPic"  src="~/Content/Images/noimage.png" />
                </div>
                @*<div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>*@
            </div>

        </div>
    </div>
    @Html.PagedListPager(Model, page => Url.Action("Gallery", "Pictures", new { page }))
    @Scripts.Render("~/bundles/toastr")
    @*@Html.ActionLink("Участвай", "GetUploadForm", "Pictures", null, new { @class = "modal-link btn btn-success" })*@
</div>

<script type="text/javascript">
  
    $('.gallery-item-img').on('click', function (e) {
        $("#modalPic").attr("src",e.target.currentSrc);
        $("#myModal").modal();
        }
    );

    function OnAjaxRequestBegin() {
        console.log("This is the OnBegin Callback");
    }
    function OnAjaxRequestSuccess(data) {
        console.log("This is the OnSuccessCallback: " + data);
    }
    function OnAjaxRequestFailure(request, error) {
        debugger;
        console.log("This is the OnFailure Callback:" + request.responseText);
    }
    function OnAjaxRequestComplete(request, status) {
        console.log("This is the OnComplete Callback");
        console.log(request);
    }
</script>